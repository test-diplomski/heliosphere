// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.0--rc2
// source: ratelimiter/rate-limiter.proto

package ratelimiter

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RateLimiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserName  string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	Type      string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	ReqPerSec int64  `protobuf:"varint,5,opt,name=reqPerSec,proto3" json:"reqPerSec,omitempty"`
	Burst     int64  `protobuf:"varint,6,opt,name=burst,proto3" json:"burst,omitempty"`
}

func (x *RateLimiter) Reset() {
	*x = RateLimiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiter) ProtoMessage() {}

func (x *RateLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiter.ProtoReflect.Descriptor instead.
func (*RateLimiter) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{0}
}

func (x *RateLimiter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RateLimiter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RateLimiter) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RateLimiter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RateLimiter) GetReqPerSec() int64 {
	if x != nil {
		return x.ReqPerSec
	}
	return 0
}

func (x *RateLimiter) GetBurst() int64 {
	if x != nil {
		return x.Burst
	}
	return 0
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{1}
}

type ListOfRateLimiters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limiters []*RateLimiter `protobuf:"bytes,1,rep,name=limiters,proto3" json:"limiters,omitempty"`
}

func (x *ListOfRateLimiters) Reset() {
	*x = ListOfRateLimiters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfRateLimiters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfRateLimiters) ProtoMessage() {}

func (x *ListOfRateLimiters) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfRateLimiters.ProtoReflect.Descriptor instead.
func (*ListOfRateLimiters) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{2}
}

func (x *ListOfRateLimiters) GetLimiters() []*RateLimiter {
	if x != nil {
		return x.Limiters
	}
	return nil
}

type CreateRateLimiterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateLimiter *RateLimiter `protobuf:"bytes,1,opt,name=rateLimiter,proto3" json:"rateLimiter,omitempty"`
}

func (x *CreateRateLimiterRequest) Reset() {
	*x = CreateRateLimiterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRateLimiterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRateLimiterRequest) ProtoMessage() {}

func (x *CreateRateLimiterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRateLimiterRequest.ProtoReflect.Descriptor instead.
func (*CreateRateLimiterRequest) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRateLimiterRequest) GetRateLimiter() *RateLimiter {
	if x != nil {
		return x.RateLimiter
	}
	return nil
}

type UpdateRateLimiterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RateLimiter *RateLimiter `protobuf:"bytes,1,opt,name=rateLimiter,proto3" json:"rateLimiter,omitempty"`
}

func (x *UpdateRateLimiterRequest) Reset() {
	*x = UpdateRateLimiterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRateLimiterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRateLimiterRequest) ProtoMessage() {}

func (x *UpdateRateLimiterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRateLimiterRequest.ProtoReflect.Descriptor instead.
func (*UpdateRateLimiterRequest) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRateLimiterRequest) GetRateLimiter() *RateLimiter {
	if x != nil {
		return x.RateLimiter
	}
	return nil
}

type GetRateLimiterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRateLimiterRequest) Reset() {
	*x = GetRateLimiterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRateLimiterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateLimiterRequest) ProtoMessage() {}

func (x *GetRateLimiterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateLimiterRequest.ProtoReflect.Descriptor instead.
func (*GetRateLimiterRequest) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{5}
}

func (x *GetRateLimiterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRateLimiterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRateLimiterRequest) Reset() {
	*x = DeleteRateLimiterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRateLimiterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRateLimiterRequest) ProtoMessage() {}

func (x *DeleteRateLimiterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRateLimiterRequest.ProtoReflect.Descriptor instead.
func (*DeleteRateLimiterRequest) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRateLimiterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRateLimiterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteRateLimiterResponse) Reset() {
	*x = DeleteRateLimiterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRateLimiterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRateLimiterResponse) ProtoMessage() {}

func (x *DeleteRateLimiterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRateLimiterResponse.ProtoReflect.Descriptor instead.
func (*DeleteRateLimiterResponse) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRateLimiterResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type AllowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AllowRequest) Reset() {
	*x = AllowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowRequest) ProtoMessage() {}

func (x *AllowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowRequest.ProtoReflect.Descriptor instead.
func (*AllowRequest) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{8}
}

func (x *AllowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AllowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed bool `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *AllowResponse) Reset() {
	*x = AllowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ratelimiter_rate_limiter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowResponse) ProtoMessage() {}

func (x *AllowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ratelimiter_rate_limiter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowResponse.ProtoReflect.Descriptor instead.
func (*AllowResponse) Descriptor() ([]byte, []int) {
	return file_ratelimiter_rate_limiter_proto_rawDescGZIP(), []int{9}
}

func (x *AllowResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

var File_ratelimiter_rate_limiter_proto protoreflect.FileDescriptor

var file_ratelimiter_rate_limiter_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x61,
	0x74, 0x65, 0x2d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0b,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75,
	0x72, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x56, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x72,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x72, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22,
	0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x32, 0xcc, 0x05, 0x0a, 0x10, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x0c, 0x2f, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x3a, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x12, 0x69, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x61, 0x74,
	0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x66, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x0c, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x3a, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x7d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x74, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e,
	0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ratelimiter_rate_limiter_proto_rawDescOnce sync.Once
	file_ratelimiter_rate_limiter_proto_rawDescData = file_ratelimiter_rate_limiter_proto_rawDesc
)

func file_ratelimiter_rate_limiter_proto_rawDescGZIP() []byte {
	file_ratelimiter_rate_limiter_proto_rawDescOnce.Do(func() {
		file_ratelimiter_rate_limiter_proto_rawDescData = protoimpl.X.CompressGZIP(file_ratelimiter_rate_limiter_proto_rawDescData)
	})
	return file_ratelimiter_rate_limiter_proto_rawDescData
}

var file_ratelimiter_rate_limiter_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ratelimiter_rate_limiter_proto_goTypes = []interface{}{
	(*RateLimiter)(nil),               // 0: ratelimiter.RateLimiter
	(*EmptyRequest)(nil),              // 1: ratelimiter.EmptyRequest
	(*ListOfRateLimiters)(nil),        // 2: ratelimiter.ListOfRateLimiters
	(*CreateRateLimiterRequest)(nil),  // 3: ratelimiter.CreateRateLimiterRequest
	(*UpdateRateLimiterRequest)(nil),  // 4: ratelimiter.UpdateRateLimiterRequest
	(*GetRateLimiterRequest)(nil),     // 5: ratelimiter.GetRateLimiterRequest
	(*DeleteRateLimiterRequest)(nil),  // 6: ratelimiter.DeleteRateLimiterRequest
	(*DeleteRateLimiterResponse)(nil), // 7: ratelimiter.DeleteRateLimiterResponse
	(*AllowRequest)(nil),              // 8: ratelimiter.AllowRequest
	(*AllowResponse)(nil),             // 9: ratelimiter.AllowResponse
}
var file_ratelimiter_rate_limiter_proto_depIdxs = []int32{
	0, // 0: ratelimiter.ListOfRateLimiters.limiters:type_name -> ratelimiter.RateLimiter
	0, // 1: ratelimiter.CreateRateLimiterRequest.rateLimiter:type_name -> ratelimiter.RateLimiter
	0, // 2: ratelimiter.UpdateRateLimiterRequest.rateLimiter:type_name -> ratelimiter.RateLimiter
	3, // 3: ratelimiter.RateLimitService.CreateRateLimiter:input_type -> ratelimiter.CreateRateLimiterRequest
	5, // 4: ratelimiter.RateLimitService.GetRateLimiter:input_type -> ratelimiter.GetRateLimiterRequest
	1, // 5: ratelimiter.RateLimitService.GetAllRateLimiters:input_type -> ratelimiter.EmptyRequest
	4, // 6: ratelimiter.RateLimitService.UpdateRateLimiter:input_type -> ratelimiter.UpdateRateLimiterRequest
	6, // 7: ratelimiter.RateLimitService.DeleteRateLimiter:input_type -> ratelimiter.DeleteRateLimiterRequest
	8, // 8: ratelimiter.RateLimitService.CanRateLimiterAllowRequest:input_type -> ratelimiter.AllowRequest
	0, // 9: ratelimiter.RateLimitService.CreateRateLimiter:output_type -> ratelimiter.RateLimiter
	0, // 10: ratelimiter.RateLimitService.GetRateLimiter:output_type -> ratelimiter.RateLimiter
	2, // 11: ratelimiter.RateLimitService.GetAllRateLimiters:output_type -> ratelimiter.ListOfRateLimiters
	0, // 12: ratelimiter.RateLimitService.UpdateRateLimiter:output_type -> ratelimiter.RateLimiter
	7, // 13: ratelimiter.RateLimitService.DeleteRateLimiter:output_type -> ratelimiter.DeleteRateLimiterResponse
	9, // 14: ratelimiter.RateLimitService.CanRateLimiterAllowRequest:output_type -> ratelimiter.AllowResponse
	9, // [9:15] is the sub-list for method output_type
	3, // [3:9] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ratelimiter_rate_limiter_proto_init() }
func file_ratelimiter_rate_limiter_proto_init() {
	if File_ratelimiter_rate_limiter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ratelimiter_rate_limiter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfRateLimiters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRateLimiterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRateLimiterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRateLimiterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRateLimiterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRateLimiterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ratelimiter_rate_limiter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ratelimiter_rate_limiter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ratelimiter_rate_limiter_proto_goTypes,
		DependencyIndexes: file_ratelimiter_rate_limiter_proto_depIdxs,
		MessageInfos:      file_ratelimiter_rate_limiter_proto_msgTypes,
	}.Build()
	File_ratelimiter_rate_limiter_proto = out.File
	file_ratelimiter_rate_limiter_proto_rawDesc = nil
	file_ratelimiter_rate_limiter_proto_goTypes = nil
	file_ratelimiter_rate_limiter_proto_depIdxs = nil
}
